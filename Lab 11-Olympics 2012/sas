/*****************************************************************************
* Name:        Pranav Bhagat
* Assignment:  Lab 11 
*****************************************************************************/

*<--- TYPE CODE WITHIN THESE BOUNDS  ----  TYPE CODE WITHIN THESE BOUNDS --->;
*1234567890123456789012345678901234567890123456789012345678901234567890123456;

/*---------------------------------------------------------------------------
Question 1 
---------------------------------------------------------------------------*/
*create flash library;
libname flash "/folders/myfolders/My_data/";;

/*---------------------------------------------------------------------------
Question 2 
---------------------------------------------------------------------------*/
*There would be 496 observations in this data set;
*each observation represents an olympic medalist;
proc contents data=flash.o2012 varnum; run;
proc freq data=flash.o2012; run;

/*---------------------------------------------------------------------------
Question 3 
---------------------------------------------------------------------------*/
*create a sorted data set;
proc sort data=flash.O2012 out=olympics; 
	by country; 
run;

/*---------------------------------------------------------------------------
Questions 4 and 6 
---------------------------------------------------------------------------*/
*create second temporary data set;
data olympics2;
	set olympics;
	by country;

	retain max_medals;

	if first.country then do;

		*for 4a - medal variables;
		num_medalists=0;
		num_gold=0;
		num_silver=0;
		num_bronze=0;
		num_total=0;

		*for 4b - functions of medals;
		max_medals=0;

		*for 4c - athlete variables;
		tot_age=0;
		tot_wt=0;
		tot_ht=0;
		num_male=0;

		*for 6c - corrected denominator for average weight;
		num_nomisswt=0;
	end;

	*for 4a - medal variables;
	num_medalists+1;
	num_gold+gold;
	num_silver+silver;
	num_bronze+bronze;
	num_total+total;

	*for 4b - functions of medals;
	ratio=num_total/num_medalists;
	max_medals=max(max_medals,total);

	*for 6c - corrected denominator for average weight;
	if weight ne . then num_nomisswt+1;

	*for 4c - athlete variables;
	tot_age+age;
	tot_wt+weight;
	tot_ht+height;

	*for 4c - athlete variables;
	ave_age=tot_age/num_medalists;
	ave_wt=tot_wt/num_medalists;
	ave_wt_fixed=tot_wt/num_nomisswt;
	ave_ht=tot_ht/num_medalists;

	*for 4c - athlete variables;
	if gender="M" then num_male+1;
	prop_m=num_male/num_medalists;

run;


/*---------------------------------------------------------------------------
Question 5 
---------------------------------------------------------------------------*/
*part a;
*the observations in this data set represent medalists, so there should
never be fewer medals given than number of medalists. ;

*part b - identify the counties;
proc print data=olympics2; 
	where ratio lt 1; 
run;
*the three countries that have a ratio less than one are
Spain, Great Britain, and Pakistan;

*part c - print the data;
proc print;
where country="Spain" or country="Great Britain" or country="Pakistan"; 
var country name total num_total num_medalists ratio; 
run;
*these countries ended up with a ratio less than one because a few athletes
had missing values for the total variable;


/*---------------------------------------------------------------------------
Question 6
---------------------------------------------------------------------------*/
*parts a and b - identify sports in which athletes' weight is missing;
proc freq data=olympics2;
	where weight=.;
	tables sport ;
run;
*part a - the six sports are cycling road, fencing, gymnastics artistic,
rowing, shooting, and trampoline;
*part b - gymnastics artistic has the msot missing values for weight;



/*---------------------------------------------------------------------------
Question 7
---------------------------------------------------------------------------*/
*part a - create third data set with only country level informatio;
data olympics3;
	set olympics2;
	by country;
	if last.country then output;
	keep country num_medalists num_nomisswt num_gold num_silver num_bronze num_total ratio max_medals ave_age ave_wt ave_wt_fixed ave_ht prop_m;
run;

*part b - print the data;
proc print data=olympics3 round; 
run;



*print check values for question 7;
proc print data=olympics3  (obs=10) round; 
var country num_medalists  num_total ratio max_medals ave_age  ave_wt_fixed  prop_m;
run;
